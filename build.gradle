apply plugin: 'application'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version = "2.1-SNAPSHOT"

mainClassName = 'co.paralleluniverse.spaceships.Spaceships'
ext.mainClass = mainClassName

repositories {
    flatDir { dirs 'lib' }
    flatDir { dirs 'jogamp' }
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://download.oracle.com/maven/" }
}

configurations {
    quasar
    natives
}
    
dependencies {
    compile "co.paralleluniverse:spacebase-core:2.3-SNAPSHOT:jdk8" // JDK 8
    compile "co.paralleluniverse:quasar-core:0.6.0-SNAPSHOT:jdk8" // JDK 8
    quasar  "co.paralleluniverse:quasar-core:0.6.0-SNAPSHOT:jdk8@jar" // JDK 8
    
    compile "co.paralleluniverse:quasar-actors:0.6.0-SNAPSHOT"
    compile "com.google.guava:guava:16.0.1"
    compile "com.codahale.metrics:metrics-core:3.0.2" 
    compile "org.jogamp.jogl:jogl-all:2.1.0"
    compile 'org.apache.commons:commons-lang3:3.1'
    
    compile files('jogamp/gluegen-rt-2.1.0.jar')
    compile files('jogamp/jogl-all-2.1.0.jar')
    runtime files('jogamp/gluegen-rt-2.1.0-natives-linux-i586.jar', 'jogamp/gluegen-rt-2.1.0-natives-linux-amd64.jar',
                  'jogamp/gluegen-rt-2.1.0-natives-windows-i586.jar', 'jogamp/gluegen-rt-2.1.0-natives-windows-amd64.jar',
                  'jogamp/gluegen-rt-2.1.0-natives-macosx-universal.jar')
    runtime files('jogamp/jogl-all-2.1.0-natives-linux-i586.jar', 'jogamp/jogl-all-2.1.0-natives-linux-amd64.jar',
                  'jogamp/jogl-all-2.1.0-natives-windows-i586.jar', 'jogamp/jogl-all-2.1.0-natives-windows-amd64.jar',
                  'jogamp/jogl-all-2.1.0-natives-macosx-universal.jar')

    //    natives "org.jogamp.jogl:jogl-all:2.1.0"
    //    natives "org.jogamp.gluegen:gluegen-rt:2.1.0"
    //    natives "org.jogamp.jogl:jogl-all:2.1.0:natives-linux-i586", "org.jogamp.jogl:jogl-all:2.1.0:natives-linux-amd64", 
    //            "org.jogamp.jogl:jogl-all:2.1.0:natives-windows-i586", "org.jogamp.jogl:jogl-all:2.1.0:natives-windows-amd64", 
    //            "org.jogamp.jogl:jogl-all:2.1.0:natives-macosx-universal"
    //    natives "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-linux-i586", "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-linux-amd64", 
    //            "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-windows-i586", "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-windows-amd64", 
    //            "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-macosx-universal"      
}

//sourceSets {  
//    main {
//        compileClasspath += configurations.natives  
//    }  
//    test {  
//        compileClasspath += configurations.natives
//    }  
//} 

task copyJogamp(type: Sync) {
    from { configurations.natives }
    into { "${rootProject.projectDir}/jogamp" }
}

task copyLibs(type: Sync) {
    dependsOn copyJogamp
    from { configurations.compile }
    into { "${rootProject.projectDir}/lib" }
    include 'spacebase-*.jar'
}

task copyShaders(type:Copy) {
    from 'src/main/java/co/paralleluniverse/spaceships/render/shader'
    into 'build/classes/main/co/paralleluniverse/spaceships/render/shader'
}
classes.dependsOn copyShaders

tasks.withType(JavaExec) {
    jvmArgs '-server'
    jvmArgs "-javaagent:${configurations.quasar.singleFile}" // =vdmc (verbose, debug, allow monitors, check class)
    // systemProperty "co.paralleluniverse.fibers.DefaultFiberPool.parallelism", "4"
    systemProperty "co.paralleluniverse.fibers.DefaultFiberPool.monitor", "JMX" // "METRICS" // "NONE" //

    // memory
    jvmArgs '-Xmx1024m'
    jvmArgs '-XX:+UseParallelGC'
    jvmArgs '-XX:+UseCondCardMark'
    // jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=50'
    
    // profiling
    // jvmArgs '-XX:+UnlockCommercialFeatures', '-XX:+FlightRecorder'
    // jvmArgs '-verbose:gc'
    // jvmArgs '-XX:+UnlockDiagnosticVMOptions', '-XX:+TraceClassLoading', '-XX:+LogCompilation' // use with jitwatch
    // jvmArgs '-XX:+UnlockDiagnosticVMOptions', '-XX:+PrintInlining'
    
    // logging
    systemProperty "log4j.configurationFile", "${rootProject.projectDir}/log4j.xml"
    systemProperty "Log4jContextSelector", "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
    
    // debugging
    //jvmArgs '-ea'
    // systemProperty "co.paralleluniverse.debugMode", "true"
    systemProperty "co.paralleluniverse.globalFlightRecorder", "true"
    systemProperty "co.paralleluniverse.flightRecorderDumpFile", "spaceships.log"
    systemProperty "co.paralleluniverse.monitoring.flightRecorderLevel", "1"
    systemProperty "co.paralleluniverse.monitoring.flightRecorderSize","100000" 
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

task classpath << {
    println configurations.runtime.files.join(':')
}

defaultTasks 'build','run'